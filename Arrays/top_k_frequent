class Solution {
  /**
   * @param {number[]} nums
   * @param {number} k
   * @return {number[]}
   */
  topKFrequent(nums, k) {
    const frequencyMap = new Map();
    for (let i = 0; i < nums.length; i++) {
      if (frequencyMap.has(nums[i])) {
        frequencyMap.set(nums[i], frequencyMap.get(nums[i]) + 1);
      } else {
        frequencyMap.set(nums[i], 1);
      }
    }

    const countArray = Array.from(frequencyMap.entries());
    countArray.sort((a, b) => {
      return b[1] - a[1];
    });

    const result = countArray.slice(0, k).map((pair) => pair[0]);

    return result;
  }
}
